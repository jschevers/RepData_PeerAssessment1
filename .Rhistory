xyplot(Ozone ~ Wind, data = airquality)
airquality <- transform(airquality, Month = factor(Month))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5, 1))
## Custom panel function
xyplot(y ~ x | f, panel = function(x, y, ...) {
panel.xyplot(x, y, ...) ## First call the default panel function for 'xyplot'
panel.abline(h = median(y), lty = 2) ## Add a horizontal line at the median
})
x <- rnorm(100)
f <- rep(0:1, each = 50)
y <- x + f - f * x + rnorm(100, sd = 0.5)
f <- factor(f, labels = c("Group 1", "Group 2"))
xyplot(y ~ x | f, layout = c(2, 1)) ## Plot with 2 panels
## Custom panel function
xyplot(y ~ x | f, panel = function(x, y, ...) {
panel.xyplot(x, y, ...) ## First call default panel function
panel.lmline(x, y, col = 2) ## Overlay a simple linear regression line
})
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
print.trellis(p)
?splom
?lattice
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
table(airquality$Month)
summary(airquality)
?geom
g <- ggplot(movies, aes(votes, rating))
print(g)
g+geom_points())
g+geom_points()
g+geom_point()
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
?legend
set.seed(1234)
par(mar = c(0, 0, 0, 0))
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
x
rep(1:3, each = 4)
y <- rnorm(12, mean = rep(c(1, 2, 1), each = 4), sd = 0.2)
plot(rep(1:3, each = 4),rep(c(1, 2, 1), each = 4))
cbind(x,y)
cbinf(rep(1:3, each = 4),rep(c(1, 2, 1), each = 4))
cbind(rep(1:3, each = 4),rep(c(1, 2, 1), each = 4))
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
dataFrame <- data.frame(x = x, y = y)
dataFrame
dist(dataFrame)
distxy <- dist(dataFrame)
hClustering <- hclust(distxy)
plot(hClustering)
?hclust
setwd("C:/Users/Jesse/Documents/Coursera/exdata")
NEIrds="summarySCC_PM25.rds"
SCCrds="Source_Classification_Code.rds"
## unzip or download if necessary
if (!file.exists(NEIrds) | !file.exists(NEIrds))
zipfile="FNEI_data.zip"
{if (!file.exists(zipfile))
{
url="https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
download.file(url,zipfile,method="auto")
}
unzip(zipfile)
}
## read the rds files
NEI <- readRDS(NEIrds)
SCC <- readRDS(SCCrds)
(!file.exists(NEIrds) | !file.exists(NEIrds))
file.exists(NEIrds)
file.exists(NEIrds)
## unzip or download if necessary
if (!file.exists(NEIrds) | !file.exists(NEIrds))
{zipfile="FNEI_data.zip"
if (!file.exists(zipfile))
{
url="https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
download.file(url,zipfile,method="auto")
}
unzip(zipfile)
}
SCC <- readRDS(SCCrds)
summary(SCC)
SSC[1,]
SCC[1,]
install.packages(c("dplyr", "quantmod", "testthat"))
library(kntr)
install.packages("kntr")
library(knitr)
install.packiages(knitr)
install.packages(knitr)
install.packages("knitr")
library(knitr)
install.packages("markdown")
library(markdown)
library(markdown)
install.packages("rmarkdown")
library(rmarkdown)
exit
q()
amdata="activity.csv"
if (!file.exists(amdata)){
zipfile="activity.zip"
if (!file.exists(zipfile)){
url="https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(url,zipfile, mode = "wb")
}
unzip(zipfile)
}
dat0=read.csv(amdata,header=TRUE,na.strings = "NA",colClasses=c("integer","Date","integer"))
#dat0=read.csv(amdata,header=TRUE,na.strings = "NA",colClasses=c("integer","Date","character"))
#remove incomlete cases
dat=dat0[complete.cases(dat0),]
getwd()
setwd("C:/JESSE/Coursera/repdata/week2/Assessment1wd")
amdata="activity.csv"
if (!file.exists(amdata)){
zipfile="activity.zip"
if (!file.exists(zipfile)){
url="https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(url,zipfile, mode = "wb")
}
unzip(zipfile)
}
dat0=read.csv(amdata,header=TRUE,na.strings = "NA",colClasses=c("integer","Date","integer"))
#dat0=read.csv(amdata,header=TRUE,na.strings = "NA",colClasses=c("integer","Date","character"))
#remove incomlete cases
dat=dat0[complete.cases(dat0),]
tot_steps=aggregate(dat$steps, by=list(dat$date),FUN=sum)
names(tot_steps)=c("date","steps")
br=ceiling(sqrt(nrow(tot_steps))) #squareroot-methode to indicate number of bars
hist(tot_steps$steps,breaks=br,main="Total number of steps per day",xlab="",col="gray")
mean_steps=format(mean(tot_steps$steps,na.rm=TRUE))
median_steps=median(tot_steps$steps,na.rm=TRUE)
av_steps=aggregate(dat$steps, by=list(dat$interval),FUN=mean)
names(av_steps)=c("interval","steps")
plot(av_steps$interval,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")
av_steps$interval[1:5]
formatC(av_steps$interval[1:5], width = 4, format = "d", flag = "0")
format(formatC(av_steps$interval[1:5], width = 4, format = "d", flag = "0") ,%H%M)
format(formatC(av_steps$interval[1:5], width = 4, format = "d", flag = "0") ,"%H%M")
plot(av_steps$int,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")
axis( xaxt="n")
?axis
axis(1, xaxt="n")
plot(av_steps$int,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")
axis(1, xaxt="n")
plot(av_steps$int[1:60],av_steps$steps[1:60],type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")
plot(av_steps$int[1:10],av_steps$steps[1:10],type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")
plot(av_steps$int[1:13],av_steps$steps[1:13],type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")
av_steps[1:13,]
axis(1, xaxt="n")
axis(1, xaxt="n")
?plot
?axis
plot(factor(av_steps$int[1:13]),av_steps$steps[1:13],type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")
plot(factor(av_steps$int[1:13]),av_steps$steps[1:13]#,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")
plot(factor(av_steps$int[1:13]),av_steps$steps[1:13],type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")
plot(av_steps$int[1:13],av_steps$steps[1:13],type="l"
,main="average daily activity pattern",xlab="interval",ylab="step",xaxt="n")
?axis
axis(1, xaxt="n")
plot(av_steps$int[1:13],av_steps$steps[1:13],type="l"
,main="average daily activity pattern",xlab="interval",ylab="step",xaxt="n")
axis(1, xaxt="n")
plot(av_steps$int[1:13],av_steps$steps[1:13],type="l"
,main="average daily activity pattern",xlab="interval",ylab="step",xaxt="n")
axis(1, labels=unique(av_steps$int[1:13]))
unique(av_steps$int[1:13])
av_steps$interval[1:5]
av_steps$interval[1:13]
as.POSIXct(av_steps$interval[1:13])
as.POSIXct(av_steps$interval[1:13],tz="")
?as.POSIXct
as.POSIXct(av_steps$interval[1:13],tz="",format="%H%M")
as.POSIXct(av_steps$interval[1:13],tz="GMT",format="%H%M")
as.POSIXct(av_steps$interval[1:13], origin = "1960-01-01",format="%H%M")
plot(av_steps$int[1:13],av_steps$steps[1:13],type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")#,xaxt="n")
plot(av_steps$int[1:13],av_steps$steps[1:13],type="l"
,main="average daily activity pattern",xlab="interval",ylab="step",xaxt="n")
av_steps$int[1:13]
av_steps$interval[1:5]/5
av_steps$interval[1:3]/5
av_steps$interval[1:13]/5
av_steps
unique(av_steps$int)
d=data.frame(unique(av_steps$int))
head(d)
names(d)="interval"
d$in2=d$interval=100
head(d,13)
d=data.frame(unique(av_steps$int))
names(d)="interval"
d$in2=d$interval/100
head(d,13)
d$in2=trunc(d$interval/100)
head(d,13)
d$in2=d$interval-trunc(d$interval/100)
head(d,13)
d$in2=d$interval-trunc((d$interval/100)+1)
head(d,13)
d$in2=d$interval-trunc((d$interval/100))
head(d,13)
d$in2=d$interval-trunc((d$interval/100)+1)-1
head(d,13)
d$in2=d$interval-trunc((d$interval/100)-1)+1
head(d,13)
d$in2=d$interval-trunc((d$interval/100))
head(d,14)
plot(av_steps$int[1:13],av_steps$steps[1:13],type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")
plot(av_steps$int[1:13],type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")
?as.posixct
?posixct
??posixct
library(ggplot2)
dane <- data.frame(mylevels=c(1,2,5,9), myvalues=c(2, 5, 3, 4))
ggplot(dane, aes(x=factor(mylevels), y=myvalues,group=1)) +
geom_line() + geom_point(size=3)
ggplot(av_steps$int, aes(x=factor(av_steps$steps), y=myvalues,group=1)) +
geom_line() + geom_point(size=3)
plot(av_steps$int[1:13],av_steps$steps[1:13],type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")
ggplot(av_steps, aes(x=factor(interval), y=steps,group=1)) +
geom_line() + geom_point(size=3)
ggplot(av_steps, aes(x=factor(interval), y=steps,group=1)) +
geom_line()
plot(av_steps$int,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")
?ggplot
?aes
qplot(interval,steps,data=av_steps)
qplot(factor(interval),steps,data=av_steps)
qplot(factor(interval),steps,data=av_steps,geom="density")
?geom
?qplot
qplot(factor(interval),steps,data=av_steps,geom="line")
qplot(factor(interval),steps,data=av_steps)
qplot(factor(interval),steps,data=av_steps[,1:13])
qplot(factor(interval),steps,data=av_steps[1:13,])
qplot(interval,steps,data=av_steps[1:13,])
qplot(factor(interval),steps,data=av_steps[1:13,])
p + geom_line()
p=qplot(factor(interval),steps,data=av_steps[1:13,])
p + geom_line()
qplot(factor(interval),steps,data=av_steps[1:13,],geom="line")
ggplot(factor(interval),steps,data=av_steps[1:13,],geom="line")
d=av_steps[1:15,]
d
?rank
d$r=rank(interval)
d$r=rank(d$interval)
d
plot(av_steps$int[1:13],type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")
plot(av_steps$interval[1:13],type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")
d=av_steps[1:13,]
plot(d$interval,d$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")
plot(rank(d$interval),d$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")
?plot
?axis
plot(rank(d$interval),d$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step", xaxt="n")
axis(1,d$interval)
d=av_steps[1:15,]
plot(rank(d$interval),d$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step", xaxt="n")
axis(1,d$interval)
plot(av_steps$interval,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")
plot(av_steps$interval,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step",xaxt="n")
axis(1,av_steps$interval)
plot(rank(av_steps$interval),av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step",xaxt="n")
axis(1,av_steps$interval)
plot(av_steps$interval,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")
plot(rank(av_steps$interval),av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step",xaxt="n")
axis(1,av_steps$interval)
d=av_steps[1:15,]
plot(rank(d$interval),d$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step", xaxt="n")
axis(1,d$interval)
plot(av_steps$interval,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")
plot(rank(av_steps$interval),av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step",xaxt="n")
axis(1,labels=av_steps$interval)
av_steps$r=rank(av_steps$interval)
av_steps$r=rank(av_steps$interval)
plot(av_steps$interval,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")
plot( av_steps$r,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step",xaxt="n")
axis(1,labels=av_steps$interval)
axis(1,av_steps$interval)
av_steps$interval
head(av_steps,15)
ax=av_steps$interval
plot( av_steps$r,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step",xaxt="n")
ax=av_steps$interval
axis(1,ax)
mod(13,12)
modulo(13,12)
13 %% 12
ax =ifelse(ax %% 12 != 1,FALSE,ax)
plot( av_steps$r,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step",xaxt="n")
axis(1,ax)
ax[1:16]
ax=av_steps$interval
ax[1:16]
av_steps$ax= =ifelse(av_steps$r %% 12 != 1,FALSE,av_steps$interval)
plot( av_steps$r,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step",xaxt="n")
axis(1,ax)
ax[1:16]
av_steps$ax= =ifelse(av_steps$r %% 12 != 0,FALSE,av_steps$interval)
axis(1,ax)
plot( av_steps$r,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step",xaxt="n")
av_steps$ax= =ifelse(av_steps$r %% 12 != 0,FALSE,av_steps$interval)
axis(1,ax)
NumberToTime=function(n){
# 4 positions
d4=formatC(n, width = 4, format = "d", flag = "0")
part1=substring(d4,1,2)
part2=substring(d4,3,4)
paste(part1,part2,sep=":")
}
av_steps$ax=NumberToTime(av_steps$interval)
,main="average daily activity pattern",xlab="interval",ylab="step")
plot( av_steps$r,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step",xaxt="n")
axis(1,ax)
plot( av_steps$r,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step",xaxt="n")
axis(1,av_steps$ax)
head(av_steps)
plot( av_steps$r,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step",xaxt="n")
axis(1,av_steps$interval)
axis(2,av_steps$interval)
axis(3,av_steps$interval)
plot( av_steps$r,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")#,xaxt="n")
axis(3,av_steps$interval)
plot( av_steps$r,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")#,xaxt="n")
axis(3,label=av_steps$interval)
axis(3,at=av_steps$interval)
head(av_steps)
plot( av_steps$r,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")#,xaxt="n")
axis(3,labels=av_steps$ax)
plot( av_steps$r,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")#,xaxt="n")
axis(3,at=rep(c(1,0,0,0,0,0,0,0,0,0,0,0),24),labels=av_steps$ax)
rep(c(1,0,0,0,0,0,0,0,0,0,0,0),24)
plot( av_steps$r,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")#,xaxt="n")
#av_steps$ax=NumberToTime(av_steps$interval)
#av_steps$ax= =ifelse(av_steps$r %% 12 != 0,FALSE,av_steps$interval)
axis(3,at=rep(c(TRUE,rep(FALSE,12)),24),labels=av_steps$ax)
axis(3,at=rep(c(TRUE,rep(FALSE,12)),23),labels=av_steps$ax)
axis(3,at=rep(c(TRUE,rep(FALSE,12)),22),labels=av_steps$ax)
head(av_steps,15)
axis(3,at=rep(c(TRUE,rep(FALSE,11)),24),labels=av_steps$ax)
rep(c(TRUE,rep(FALSE,11)),24)
x <- c(1:10); y <- x; z <- 10/x
x
plot(x, y)
plot(x, y,type="b", pch=21, col="red",
yaxt="n", lty=3, xlab="", ylab="")
lines(x, z, type="b", pch=22, col="blue", lty=2)
axis(2, at=x,labels=x, col.axis="red", las=2)
axis(4, at=z,labels=round(z,digits=2),
col.axis="blue", las=2, cex.axis=0.7, tck=-.01)
mtext("y=1/x", side=4, line=3, cex.lab=1,las=2, col="blue")
title("An Example of Creative Axes", xlab="X values",
ylab="Y=X")
plot( av_steps$r,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step",xaxt="n")
axis(3,at=av_steps$r,labels=av_steps$ax)
plot( av_steps$r,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step",xaxt="n")
axis(3,at=av_steps$r,labels=av_steps$ax)
axis(1,at=av_steps$r,labels=av_steps$ax)
av_steps$pos= ifelse(av_steps$r %% 12 != 1,FALSE,av_steps$r)
plot( av_steps$r,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step",xaxt="n")
av_steps$pos= ifelse(av_steps$r %% 12 != 1,FALSE,av_steps$r)
axis(1,at=av_steps$pos,labels=av_steps$ax)
axis(3,at=av_steps$r,labels=av_steps$ax)
head(av_steps,15)
uniqu(av_steps$pos)
unique(av_steps$pos)
plot(av_steps$interval,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")
plot( av_steps$r,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")#,xaxt="n")
av_steps$pos= ifelse(av_steps$r %% 12 != 1,FALSE,av_steps$r)
axis(3,at=av_steps$pos,labels=av_steps$ax)
av_steps$pos=c(1,rep(0,287))
plot( av_steps$r,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")#,xaxt="n")
axis(3,at=av_steps$r,labels=av_steps$ax)
plot( av_steps$r,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")#,xaxt="n")
axis(3,at=av_steps$pos,labels=av_steps$ax)
head(av_steps,15)
av_steps$ax[av_steps$ax=="03:20"]
witch(av_steps$ax[av_steps$ax=="03:20"])
witch(av_steps$ax[av_steps$ax=="03:20"])
which(av_steps$ax[av_steps$ax=="03:20"])
which(av_steps$ax=="03:20")
av_steps$ax[1:4]
,main="average daily activity pattern",xlab="interval",ylab="step")
plot( av_steps$r,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")#,xaxt="n")
axis(3,labels=av_steps$ax)
axis(3,at=1,labels=av_steps$ax)
axis(3,at=rep(c(0,1),144),labels=av_steps$ax)
axis(3,at=seq(1:288,by=12),labels=av_steps$ax)
seq(1 to 288,by=12)
?seq
axis(3,at=seq(from=1, to= 288,by=12),labels=av_steps$ax)
av_steps$pos= ifelse(av_steps$r %% 12 != 1,0,av_steps$r)
plot( av_steps$r,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")#,xaxt="n")
axis(3,at=av_steps$pos,labels=av_steps$ax)
plot( av_steps$r,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")#,xaxt="n")
axis(3,at=av_steps$r,labels=av_steps$ax)
av_steps$pos=av_steps$pos[seq(from=1,to=288,by=12))
av_steps$pos=av_steps$pos[seq(from=1,to=288,by=12)]
plot( av_steps$r,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")#,xaxt="n")
av_steps$pos=av_steps$pos[seq(from=1,to=288,by=12)]
axis(3,at=av_steps$pos,labels=av_steps$ax[seq(from=1,to=288,by=12)])
pos=av_steps$pos[seq(from=1,to=288,by=12)]
axis(3,at=pos,labels=av_steps$ax[seq(from=1,to=288,by=12)])
pos
pos=av_steps$r[seq(from=1,to=288,by=12)]
axis(3,at=pos,labels=av_steps$ax[seq(from=1,to=288,by=12)])
plot( av_steps$r,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")#,xaxt="n")
pos=av_steps$r[seq(from=1,to=288,by=6)]
axis(3,at=pos,labels=av_steps$ax[seq(from=1,to=288,by=6)])
pos
plot( av_steps$r,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")#,xaxt="n")
axis(3,at=pos,labels=av_steps$ax[pos])
av_steps$r=rank(av_steps$interval)
av_steps$r=rank(av_steps$interval)
av_steps$axlabel=NumberToTime(av_steps$interval)
av_steps$r=rank(av_steps$interval)
ticks=av_steps$r[seq(from=1,to=288,by=6)] #every half hour
plot( av_steps$r,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step",xaxt="n")
axis(1,at=ticks,labels=av_steps$ax[ticks])
plot(av_steps$int,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step")
plot( av_steps$r,av_steps$steps,type="l"
,main="average daily activity pattern",xlab="interval",ylab="step",xaxt="n")
axis(1,at=ticks,labels=av_steps$ax[ticks])
Interval `r maxsteps[1]` has the maximum daily average number of steps: `r maxsteps[2]` steps a day.
getwd()
cd ..
setwd(..)
setwd(../RepData_PeerAssessment1)
setwd("../RepData_PeerAssessment1")
getpwd()
getwd()
